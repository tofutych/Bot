# -*- coding: utf-8 -*-

import telebot
from telebot import types
import datetime
from random import choice
from config import token

bot = telebot.TeleBot(token)
yes_no = ["–î–∞", "–ù–µ—Ç"]
gang = "–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏\n–ú–µ–ª—å–Ω–∏–∫–æ–≤–∞ –ï–ª–µ–Ω–∞ –ü–µ—Ç—Ä–æ–≤–Ω–∞\n–ö–æ—Å–æ–±—É—Ü–∫–∞—è –ï–∫–∞—Ç–µ—Ä–∏–Ω–∞ –í–ª–∞–¥–∏–º–∏—Ä–æ–≤–Ω–∞\n–ñ—É–∫ –ê—Ä—Å–µ–Ω–∏–π –°–µ—Ä–≥–µ–µ–≤–∏—á\n–ö–∞–ª–∞–π–¥–∏–Ω–∞ " \
       "–ì–∞–ª–∏–Ω–∞ –í–µ–Ω–∏–∞–º–∏–Ω–æ–≤–Ω–∞\n–ñ—É–∫–æ–≤ –°–µ—Ä–≥–µ–π –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á\n–†—É–±—Ü–æ–≤ –°–µ—Ä–≥–µ–π –ï–≤–≥–µ–Ω—å–µ–≤–∏—á\n–ö–ª–∏–º–µ—Ü –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á "
days = {
    0: "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫",
    1: "–í—Ç–æ—Ä–Ω–∏–∫",
    2: "–°—Ä–µ–¥–∞",
    3: "–ß–µ—Ç–≤–µ—Ä–≥",
    4: "–ü—è—Ç–Ω–∏—Ü–∞",
    5: "–°—É–±–±–æ—Ç–∞",
    6: "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ"
}
activity_numerator = {
    "0_0": "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫\n1.\n2. [9:40] –ö–æ–Ω—Å—Ç—Ä—É–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä –¥–∞–Ω–Ω—ã—Öüìí (133)\n3. –í–≤–µ–¥–µ–Ω–∏–µ –≤ —Ç–µ–æ—Ä–∏—é "
           "–ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã—Ö –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤üí° (102)",
    "0_1": "–í—Ç–æ—Ä–Ω–∏–∫\n1. –ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫üí°(344)\n2. –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –∏ –ª–æ–≥–∏—á–µ—Å–∫–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µüí° (A301a)\n3. "
           "–§–∏–∑—Ä–∞üèê\n4. –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –∏ –ª–æ–≥–∏—á–µ—Å–∫–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µüìí (A305)",
    "0_2": "–°—Ä–µ–¥–∞\n1.\n2.\n3. [11:30] –í–≤–µ–¥–µ–Ω–∏–µ –≤ —Ç–µ–æ—Ä–∏—é –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã—Ö –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤üìí (129)\n4. –í–≤–µ–¥–µ–Ω–∏–µ –≤ —Ç–µ–æ—Ä–∏—é "
           "–ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã—Ö –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤üí° (105)",
    "0_3": "–ß–µ—Ç–≤–µ—Ä–≥\n1.\n2. [9:40] –û—Å–Ω–æ–≤—ã —Ç–µ–æ—Ä–∏–∏ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–µ–π –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö –º–µ—Ç–æ–¥–æ–≤üìí (129)\n3. –û—Å–Ω–æ–≤—ã —Ç–µ–æ—Ä–∏–∏ "
           "–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–µ–π –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö –º–µ—Ç–æ–¥–æ–≤üí° (A301–±)\n",
    "0_4": "–ü—è—Ç–Ω–∏—Ü–∞\n1.\n2. [9:40] –ö–æ–Ω—Å—Ç—Ä—É–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä –¥–∞–Ω–Ω—ã—Öüí° (102)\n3. –§–∏–∑—Ä–∞üèê\n4. –§–∏–∑–∏—á–µ—Å–∫–∏–µ "
           "–æ—Å–Ω–æ–≤—ã –º–∏–∫—Ä–æ—ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∏üìí (A307)",
    "0_5": "–°—É–±–±–æ—Ç–∞\n1. –¢–µ–æ—Ä–∏—è –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤ –∏ –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤üí° (106a)\n2. –ö–æ–Ω—Å—Ç—Ä—É–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤ –∏ "
           "—Å—Ç—Ä—É–∫—Ç—É—Ä –¥–∞–Ω–Ω—ã—Öüí° (A301a)\n3. –¢–µ–æ—Ä–∏—è –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤ –∏ –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤üìí (129) ",
    "1_7": "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫\n1.\n2. [9:40] –ö–æ–Ω—Å—Ç—Ä—É–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä –¥–∞–Ω–Ω—ã—Öüìí (133)\n3. –í–≤–µ–¥–µ–Ω–∏–µ –≤ —Ç–µ–æ—Ä–∏—é "  # –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ —á–∏—Å–ª–∏—Ç–µ–ª—è 
           "–ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã—Ö –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤üí° (102)"  # –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ –∑–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—è
}
activity_denominator = {
    "1_0": "1. –ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫üí°(100–°)\n2. –ö–æ–Ω—Å—Ç—Ä—É–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä –¥–∞–Ω–Ω—ã—Öüìí (133)",
    "1_1": "–í—Ç–æ—Ä–Ω–∏–∫\n1. –ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫üí°(344)\n2. –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –∏ –ª–æ–≥–∏—á–µ—Å–∫–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µüí° (A301a)\n3. "
           "–§–∏–∑—Ä–∞üèê\n4. –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –∏ –ª–æ–≥–∏—á–µ—Å–∫–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µüìí (A305)",
    "1_2": "–°—Ä–µ–¥–∞\n1.\n2.\n3. [11:30] –í–≤–µ–¥–µ–Ω–∏–µ –≤ —Ç–µ–æ—Ä–∏—é –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã—Ö –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤üìí (129)\n4. –í–≤–µ–¥–µ–Ω–∏–µ –≤ —Ç–µ–æ—Ä–∏—é "
           "–ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã—Ö –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤üí° (105)",
    "1_3": "–ß–µ—Ç–≤–µ—Ä–≥\n1.\n2. [9:40] –û—Å–Ω–æ–≤—ã —Ç–µ–æ—Ä–∏–∏ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–µ–π –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö –º–µ—Ç–æ–¥–æ–≤üìí (129)\n3. –û—Å–Ω–æ–≤—ã —Ç–µ–æ—Ä–∏–∏ "
           "–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–µ–π –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö –º–µ—Ç–æ–¥–æ–≤üí° (A301–±)\n4. –¢–µ–æ—Ä–∏—è –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤ –∏ –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤üí° (101)",
    "1_4": "–ü—è—Ç–Ω–∏—Ü–∞\n1. –§–∏–∑–∏—á–µ—Å–∫–∏–µ –æ—Å–Ω–æ–≤—ã –º–∏–∫—Ä–æ—ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∏üí° (133)\n2. –ö–æ–Ω—Å—Ç—Ä—É–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä –¥–∞–Ω–Ω—ã—Öüí° "
           "(102)\n3. –§–∏–∑—Ä–∞üèê\n4. –§–∏–∑–∏—á–µ—Å–∫–∏–µ –æ—Å–Ω–æ–≤—ã –º–∏–∫—Ä–æ—ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∏üìí (A307)",
    "1_5": "–°—É–±–±–æ—Ç–∞\n1. –¢–µ–æ—Ä–∏—è –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤ –∏ –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤üí° (106a)\n2. –ö–æ–Ω—Å—Ç—Ä—É–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤ –∏ "
           "—Å—Ç—Ä—É–∫—Ç—É—Ä –¥–∞–Ω–Ω—ã—Öüí° (A301a)\n3. –¢–µ–æ—Ä–∏—è –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤ –∏ –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤üìí (129) ",
    "1_7": "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫\n1.\n2. [9:40] –ö–æ–Ω—Å—Ç—Ä—É–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä –¥–∞–Ω–Ω—ã—Öüìí (133)\n3. –í–≤–µ–¥–µ–Ω–∏–µ –≤ —Ç–µ–æ—Ä–∏—é "
           "–ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã—Ö –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤üí° (102)"  # –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ —á–∏—Å–ª–∏—Ç–µ–ª—è
}


@bot.message_handler(commands=["start"])
def start(message):
    bot.send_message(message.chat.id, f"–í—ã–±–∏—Ä–∞–π, {message.chat.first_name}", reply_markup=start_keyboard())


def start_keyboard():
    keyboard = types.InlineKeyboardMarkup(row_width=2)
    button1 = types.InlineKeyboardButton(text="–ß–∏—Å–ª–∏—Ç–µ–ª—å", callback_data="numerator")
    button2 = types.InlineKeyboardButton(text="–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å", callback_data="denominator")
    button4 = types.InlineKeyboardButton(text="–§–ò–û –ø—Ä–µ–ø–æ–¥–æ–≤", callback_data="fio")
    button5 = types.InlineKeyboardButton(text="–°—ä–µ–±–∞—Ç—å —Å –ø–∞—Ä—ã?", callback_data="question")
    button6 = types.InlineKeyboardButton(text="–ß–∏—Å–ª–∏—Ç–µ–ª—å –∏–ª–∏ –∑–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å?", callback_data="num_denom")
    button7 = types.InlineKeyboardButton(text="–ù–∞ —Å–µ–≥–æ–¥–Ω—è", callback_data="today")
    button8 = types.InlineKeyboardButton(text="–ù–∞ –∑–∞–≤—Ç—Ä–∞", callback_data="tomorrow")
    keyboard.add(button1, button2)
    keyboard.add(button6)
    keyboard.add(button7, button8)
    keyboard.add(button4)
    keyboard.add(button5)
    return keyboard


def days_keyboard_0():
    keyboard = types.InlineKeyboardMarkup(row_width=3)
    button0 = types.InlineKeyboardButton(text="–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", callback_data="0_0")
    button1 = types.InlineKeyboardButton(text="–í—Ç–æ—Ä–Ω–∏–∫", callback_data="0_1")
    button2 = types.InlineKeyboardButton(text="–°—Ä–µ–¥–∞", callback_data="0_2")
    button3 = types.InlineKeyboardButton(text="–ß–µ—Ç–≤–µ—Ä–≥", callback_data="0_3")
    button4 = types.InlineKeyboardButton(text="–ü—è—Ç–Ω–∏—Ü–∞", callback_data="0_4")
    button5 = types.InlineKeyboardButton(text="–°—É–±–±–æ—Ç–∞", callback_data="0_5")
    button6 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="main_menu")
    keyboard.add(button0, button1, button2)
    keyboard.add(button3, button4, button5)
    keyboard.add(button6)
    return keyboard


def days_keyboard_1():
    keyboard = types.InlineKeyboardMarkup(row_width=3)
    button0 = types.InlineKeyboardButton(text="–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", callback_data="1_0")
    button1 = types.InlineKeyboardButton(text="–í—Ç–æ—Ä–Ω–∏–∫", callback_data="1_1")
    button2 = types.InlineKeyboardButton(text="–°—Ä–µ–¥–∞", callback_data="1_2")
    button3 = types.InlineKeyboardButton(text="–ß–µ—Ç–≤–µ—Ä–≥", callback_data="1_3")
    button4 = types.InlineKeyboardButton(text="–ü—è—Ç–Ω–∏—Ü–∞", callback_data="1_4")
    button5 = types.InlineKeyboardButton(text="–°—É–±–±–æ—Ç–∞", callback_data="1_5")
    button6 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="main_menu")
    keyboard.add(button0, button1, button2)
    keyboard.add(button3, button4, button5)
    keyboard.add(button6)
    return keyboard


def result_keyboard_0():
    keyboard = types.InlineKeyboardMarkup(row_width=1)
    button0 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back0")
    button1 = types.InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
    keyboard.add(button0, button1)
    return keyboard


def result_keyboard_1():
    keyboard = types.InlineKeyboardMarkup(row_width=2)
    button0 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back1")
    button1 = types.InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
    keyboard.add(button0, button1)
    return keyboard


def today_tomorrow_keyboard():
    keyboard = types.InlineKeyboardMarkup(row_width=2)
    button1 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="main_menu")
    keyboard.add(button1)
    return keyboard


def fio_keyboard():
    keyboard = types.InlineKeyboardMarkup(row_width=1)
    button1 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="main_menu")
    keyboard.add(button1)
    return keyboard


@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    if call.data == "main_menu":
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text=f"–í—ã–±–∏—Ä–∞–π, {call.message.chat.first_name}", reply_markup=start_keyboard())
    if call.data == "back0":
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text="–ù–∞ –∫–∞–∫–æ–π –¥–µ–Ω—å –ø–æ —á–∏—Å–ª–∏—Ç–µ–ª—é?",
                              reply_markup=days_keyboard_0())
    if call.data == "back1":
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text="–ù–∞ –∫–∞–∫–æ–π –¥–µ–Ω—å –ø–æ –∑–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—é?",
                              reply_markup=days_keyboard_1())
    if call.data == "numerator":
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text="–ù–∞ –∫–∞–∫–æ–π –¥–µ–Ω—å –ø–æ —á–∏—Å–ª–∏—Ç–µ–ª—é?",
                              reply_markup=days_keyboard_0())
    if call.data == "0_0" or call.data == "0_1" or call.data == "0_2" or call.data == "0_3" or call.data == "0_4" or call.data == "0_5":
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text=activity_numerator.get(call.data),
                              reply_markup=result_keyboard_0())
    if call.data == "denominator":
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text="–ù–∞ –∫–∞–∫–æ–π –¥–µ–Ω—å –ø–æ –∑–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—é?",
                              reply_markup=days_keyboard_1())
    if call.data == "1_0" or call.data == "1_1" or call.data == "1_2" or call.data == "1_3" or call.data == "1_4" or call.data == "1_5":
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text=activity_denominator.get(call.data),
                              reply_markup=result_keyboard_1())
    if call.data == "today":
        if datetime.datetime.today().weekday() == 6:
            bot.answer_callback_query(call.id, "–î–æ–ª–±–∞–µ–±, —Å–µ–≥–æ–¥–Ω—è –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ")
        else:
            if datetime.datetime.now().isocalendar()[1] % 2 == 0:
                numerator_key = "0_" + str(datetime.datetime.today().weekday())
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text=activity_numerator.get(numerator_key),
                                      reply_markup=today_tomorrow_keyboard())
            else:
                denominator_key = "1_" + str(datetime.datetime.today().weekday())
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text=activity_denominator.get(denominator_key),
                                      reply_markup=today_tomorrow_keyboard())
    if call.data == "tomorrow":
        if datetime.datetime.today().weekday() + 1 == 6:
            bot.answer_callback_query(call.id, "–î–æ–ª–±–∞–µ–±, –∑–∞–≤—Ç—Ä–∞ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ")

        else:
            if datetime.datetime.now().isocalendar()[1] % 2 == 0:
                numerator_key = "0_" + str(datetime.datetime.today().weekday() + 1)
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text=activity_numerator.get(numerator_key),
                                      reply_markup=today_tomorrow_keyboard())
            else:
                denominator_key = "1_" + str(datetime.datetime.today().weekday() + 1)
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text=activity_denominator.get(denominator_key),
                                      reply_markup=today_tomorrow_keyboard())
    if call.data == "fio":
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text=gang, reply_markup=fio_keyboard())
    if call.data == "question":
        bot.answer_callback_query(call.id, choice(yes_no))
    if call.data == "num_denom":
        if datetime.datetime.now().isocalendar()[1] % 2 == 0:
            bot.answer_callback_query(call.id, days.get((datetime.datetime.today().weekday())) + ", —á–∏—Å–ª–∏—Ç–µ–ª—å.")
        else:
            bot.answer_callback_query(call.id, days.get((datetime.datetime.today().weekday())) + ", –∑–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å.")


if __name__ == '__main__':
    bot.polling(none_stop=True)



